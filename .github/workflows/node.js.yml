# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on: [push]

jobs:
  build:
    runs-on: macOS-latest
  
    steps:
      - uses: actions/checkout@v3

      - name: Setup Xcode version
        uses: maxim-lobanov/setup-xcode@v1.4.1
        with:
          xcode-version: '13.4'

      - name: Set up Node JS 10.17.0
        uses: actions/setup-node@v3
        with:
          node-version: '14.x'

      - name: Clean Packages 
        run: |
          rm -rf node_modules
          npm cache clean --force
          rm -rf package-lock.json

      - name: Yarn Install
        run: |
          yarn install --save-dev
        
      - name: Install React Native CLI
        run: |
          yarn add react-native-cli
          yarn add appium appium-doctor wd

      # - name: List iOS Devices & Platforms        
      #   run: |          
      #     xcrun simctl list      

      - name: Install iOS 15.0 Runtime        
        run: |  
          xcversion simulators --install='iOS 15.0'      

      - name: Create and Run iOS Emulator - iPhoneX on iOS 15.0, Update default appium config for iOS        
        run: |
           xcrun simctl create TestiPhoneX com.apple.CoreSimulator.SimDeviceType.iPhone-X com.apple.CoreSimulator.SimRuntime.iOS-15-0 > deviceid.txt 
           DEVICEUUID=`cat deviceid.txt`          
           echo $DEVICEUUID          
           sed -i -e "s/{IPHONE_UUID}/$DEVICEUUID/g" __tests__/appium_config.js          
           xcrun simctl boot $DEVICEUUID &

      - name: Use HTTPS repos
        run: |
          git config --global url."https://github".insteadOf ssh://git@github 

      - name: Pod Install
        run: |
          cd ios && pod install && cd ..

      - name: Start the Appium Server
        run: ./node_modules/.bin/appium --log-timestamp --log-no-colors --allow-insecure chromedriver_autodownload > appium.log &

      - name: Poll for Appium Server to Start
        run: |
          until $(curl --output /dev/null --silent --head --fail http://127.0.0.1:4723/wd/hub/sessions); do
            sleep 5
          done

      - name: Open Metro Bundler in Background
        run: |
          node_modules/react-native/scripts/launchPackager.command &

      - name: Build iOS App and Run Tests
        env:
          E2E_TEST_PLATFORM: 'ios'
          E2E_TEST_DEFAULTS: 'true'
          E2E_TEST_TAGS: 'E2E'
          TEST_ENV: 'test'
        run: |
          npx react-native run-ios &
          BUILT_APP=`find ~/Library/Developer/Xcode/DerivedData -name GithubActionsTest.app | grep Build/Products/Debug-iphonesimulator/GithubActionsTest.app`
          mkdir -p ios/build/GithubActionsTest/Build/Products/Debug-iphonesimulator
          cp -R $BUILT_APP ios/build/GithubActionsTest/Build/Products/Debug-iphonesimulator
          sleep 30
          yarn test &

      # Upload Appium Logs
      - name: Upload Appium logs
        uses: actions/upload-artifact@v1
        with:
          name: appium.log
          path: appium.log
      # Upload Test Results
      - name: Upload Test Results
        uses: actions/upload-artifact@v1
        with:
          name: e2e-results
          path: __tests__/e2e/output