# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on: [push]

jobs:
  build:
    runs-on: macOS-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Node JS 10.17.0
        uses: actions/setup-node@v1
        
      - name: Clean Packages 
        run: |
          rm -rf node_modules
          yarn cache clean --force
          rm -rf package-lock.json

      - name: Install dependencies
        run: |
          yarn install
          yarn install appium wd
          
      - name: Install ios dependencies
        run: |
          cd ios && pod install

      - name: Use HTTPS repos
        run: |
          git config --global url."https://github".insteadOf ssh://git@github 

      - name: Install Repo and Dependencies
        run: |
          yarn install --save-dev

      - name: Start the Appium Server
        run: ./node_modules/.bin/appium --log-timestamp --log-no-colors --allow-insecure chromedriver_autodownload > appium.log &

      - name: Poll for Appium Server to Start
        run: |
          until $(curl --output /dev/null --silent --head --fail http://127.0.0.1:4723/wd/hub/sessions); do
            sleep 5
          done

      - name: Build Android App and Run Tests
        env:
          TEST_ENV: 'test'
        run: |
          ENVFILE=.env.test npx react-native run-ios --simulator="iPad (9th generation)"
          sleep 15
          npm run e2e-test
      # Upload Appium Logs
      - name: Upload Appium logs
        uses: actions/upload-artifact@v1
        with:
          name: appium.log
          path: appium.log
      # Upload Test Results
      - name: Upload Test Results
        uses: actions/upload-artifact@v1
        with:
          name: e2e-results
          path: __tests__/e2e/output
